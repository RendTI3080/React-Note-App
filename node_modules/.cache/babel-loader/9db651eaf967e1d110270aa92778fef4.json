{"ast":null,"code":"var _jsxFileName = \"/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  /**\n   * Untuk memfilter tampilan sesuai tahun yang dipilih\n   * \n   */\n\n\n  const filteredExpenses = props.items.filter(exp => {\n    return exp.date.getFullYear().toString() === filteredYear;\n  });\n  /**\n   * Argument to show alert if data is zero\n   *\n   * */\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"not-found__expenses\",\n    children: \"No Expenses Found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this));\n  }\n  /**\n   *\n   * Create component from ExpensesItem and send back component to App.js\n   * App.js send props about title,amount,date\n   *\n   * jika kita mendapatkan data array dan ingin kita ubah menjadi sebuah component\n   * kita bisa gunakan map untuk membuat data tersebut. map berfungsi membuat sebuah array menjadi\n   * array yang baru dengan bentuk yang bisa di custom\n   *\n   *\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"get-started\",\n      children: \"Hello Get Started\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"9AA5adITwYqkuXIIKiR6QvVcyqo=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","exp","date","getFullYear","toString","expenseContent","length","map","expense","title","amount","id"],"sources":["/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  /**\n   * Untuk memfilter tampilan sesuai tahun yang dipilih\n   * \n   */\n  const filteredExpenses = props.items.filter((exp) => {return exp.date.getFullYear().toString() === filteredYear})\n\n  /**\n   * Argument to show alert if data is zero\n   *\n   * */\n  let expenseContent = <p className=\"not-found__expenses\">No Expenses Found.</p>;\n  if(filteredExpenses.length > 0){\n    expenseContent = filteredExpenses.map((expense) => (\n        <ExpenseItem\n            key = {expense.id}\n            title = {expense.title}\n            amount = {expense.amount}\n            date = {expense.date}\n        />\n    ))\n  }\n  /**\n   *\n   * Create component from ExpensesItem and send back component to App.js\n   * App.js send props about title,amount,date\n   *\n   * jika kita mendapatkan data array dan ingin kita ubah menjadi sebuah component\n   * kita bisa gunakan map untuk membuat data tersebut. map berfungsi membuat sebuah array menjadi\n   * array yang baru dengan bentuk yang bisa di custom\n   *\n   *\n   */\n  return (\n    <Card className=\"expenses\">\n      <h2 className=\"get-started\">Hello Get Started</h2>\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpensesFilter>\n      {\n        expenseContent\n      }\n    </Card>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EAEA,MAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CF,eAAe,CAACE,YAAD,CAAf;EACD,CAFD;EAIA;AACF;AACA;AACA;;;EACE,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,GAAD,IAAS;IAAC,OAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,OAAsCV,YAA7C;EAA0D,CAAvF,CAAzB;EAEA;AACF;AACA;AACA;;EACE,IAAIW,cAAc,gBAAG;IAAG,SAAS,EAAC,qBAAb;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAArB;;EACA,IAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAA+B;IAC7BD,cAAc,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,OAAD,iBAClC,QAAC,WAAD;MAEI,KAAK,EAAIA,OAAO,CAACC,KAFrB;MAGI,MAAM,EAAID,OAAO,CAACE,MAHtB;MAII,IAAI,EAAIF,OAAO,CAACN;IAJpB,GACWM,OAAO,CAACG,EADnB;MAAA;MAAA;MAAA;IAAA,QADa,CAAjB;EAQD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACE;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MAAgB,QAAQ,EAAEjB,YAA1B;MAAwC,cAAc,EAAEE;IAAxD;MAAA;MAAA;MAAA;IAAA,QAFF,EAIIS,cAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAhDQb,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}