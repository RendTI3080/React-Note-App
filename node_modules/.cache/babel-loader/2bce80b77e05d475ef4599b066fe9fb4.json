{"ast":null,"code":"var _jsxFileName = \"/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/ExpenseDate.js\";\nimport \"./ExpenseDate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseDate(props) {\n  /**\n   *\n   * Kode ini berguna untuk mengambil data props yang diambil dari App.js\n   * kita mengubah object yang kita terima dan bagi menjadi bagian-bagian yang lebih kecil seperti day,month,name dll\n   * lalu kita passing datanya ke dalam div yang ada di dalam return\n   *\n   *\n   */\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"id-ID\", {\n    month: \"long\"\n  });\n  const day = props.date.toLocaleString(\"id-ID\", {\n    day: \"2-digit\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpenseDate;\nexport default ExpenseDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"names":["ExpenseDate","props","year","date","getFullYear","month","toLocaleString","day"],"sources":["/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/ExpenseDate.js"],"sourcesContent":["import \"./ExpenseDate.css\";\nfunction ExpenseDate(props) {\n  /**\n   *\n   * Kode ini berguna untuk mengambil data props yang diambil dari App.js\n   * kita mengubah object yang kita terima dan bagi menjadi bagian-bagian yang lebih kecil seperti day,month,name dll\n   * lalu kita passing datanya ke dalam div yang ada di dalam return\n   *\n   *\n   */\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"id-ID\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"id-ID\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"\">{month}</div>\n      <div>{year}</div>\n      <div>{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n"],"mappings":";AAAA,OAAO,mBAAP;;;AACA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;EAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAb;EACA,MAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAN,CAAWG,cAAX,CAA0B,OAA1B,EAAmC;IAAED,KAAK,EAAE;EAAT,CAAnC,CAAd;EACA,MAAME,GAAG,GAAGN,KAAK,CAACE,IAAN,CAAWG,cAAX,CAA0B,OAA1B,EAAmC;IAAEC,GAAG,EAAE;EAAP,CAAnC,CAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE;MAAK,SAAS,EAAC,EAAf;MAAA,UAAmBF;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMH;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAMK;IAAN;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;KApBQP,W;AAsBT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}