{"ast":null,"code":"var _jsxFileName = \"/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/ExpenseDate.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseDate(props) {\n  /**\n   * \n   * Kode ini berguna untuk mengambil data props yang diambil dari App.js\n   * kita mengubah object yang kita terima dan bagi menjadi bagian-bagian yang lebih kecil seperti day,month,name dll\n   * lalu kita passing datanya ke dalam div yang ada di dalam return\n   * \n   * \n   */\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"id-ID\", {\n    month: \"long\"\n  });\n  const day = props.date.toLocaleString(\"id-ID\", {\n    day: \"2-digit\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ExpenseDate;\nexport default ExpenseDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"names":["ExpenseDate","props","year","date","getFullYear","month","toLocaleString","day"],"sources":["/home/rendti3080/Documents/React/React-Dasar/React-js/complete-react-js/src/component/ExpenseDate.js"],"sourcesContent":["function ExpenseDate(props){\n\n\n    /**\n     * \n     * Kode ini berguna untuk mengambil data props yang diambil dari App.js\n     * kita mengubah object yang kita terima dan bagi menjadi bagian-bagian yang lebih kecil seperti day,month,name dll\n     * lalu kita passing datanya ke dalam div yang ada di dalam return\n     * \n     * \n     */\n     const year = props.date.getFullYear();\n     const month = props.date.toLocaleString(\"id-ID\" , {month : \"long\"});\n     const day = props.date.toLocaleString(\"id-ID\", {day : \"2-digit\"});\n \n    return(\n        <div>\n            <div>\n                <div>{month}</div>\n                <div>{year}</div>\n                <div>{day}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ExpenseDate;"],"mappings":";;;AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA2B;EAGvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACK,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAb;EACA,MAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAN,CAAWG,cAAX,CAA0B,OAA1B,EAAoC;IAACD,KAAK,EAAG;EAAT,CAApC,CAAd;EACA,MAAME,GAAG,GAAGN,KAAK,CAACE,IAAN,CAAWG,cAAX,CAA0B,OAA1B,EAAmC;IAACC,GAAG,EAAG;EAAP,CAAnC,CAAZ;EAED,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,UAAMF;MAAN;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAMH;MAAN;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAMK;MAAN;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;KAxBQP,W;AA0BT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}